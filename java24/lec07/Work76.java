public class Work76 {
  public static void main(String[] args) {
    // 引数なしのコンストラクタを使用して
    // Point76型のインスタンスp1を生成
    // ↓↓↓ここにコードを追加↓↓↓
    Point76 p1 = new Point76();
    // ↑↑↑ここにコードを追加↑↑↑

    // 2つのint型の引数を持つコンストラクタを使用して
    // x座標が60で、y座標が70の
    // Point76型のインスタンスp2を生成
    // ↓↓↓ここにコードを追加↓↓↓
    Point76 p2 = new Point76(60, 70);
    // ↑↑↑ここにコードを追加↑↑↑

    // 2つのdouble型の引数を持つコンストラクタを使用して
    // x座標が26.5で、y座標が56.7の
    // Point76型のインスタンスp3を生成
    // ↓↓↓ここにコードを追加↓↓↓
    Point76 p3 = new Point76(26.5, 56.7);
    // ↑↑↑ここにコードを追加↑↑↑

    // 1つのint型の引数を持つコンストラクタを使用して
    // x座標とy座標がどちらも15の
    // Point76型のインスタンスp4を生成
    // ↓↓↓ここにコードを追加↓↓↓
    Point76 p4 = new Point76(15);
    // ↑↑↑ここにコードを追加↑↑↑

    // 1つのPoint76型の引数を持つコンストラクタを使用して
    // p3と同じフィールド値を持つ
    // インスタンスp5を生成
    // ↓↓↓ここにコードを追加↓↓↓
    Point76 p5 = new Point76(p3);
    // ↑↑↑ここにコードを追加↑↑↑

    // Point76クラスのprintInfoメソッドを利用して
    // p1の座標を実行例どおりに出力
    // ↓↓↓ここにコードを追加↓↓↓
    p1.printInfo("p1");
    // ↑↑↑ここにコードを追加↑↑↑

    // Point76クラスのprintInfoメソッドを利用して
    // p2の座標を実行例どおりに出力
    // ↓↓↓ここにコードを追加↓↓↓
    p2.printInfo("p2");
    // ↑↑↑ここにコードを追加↑↑↑

    // Point76クラスのprintInfoメソッドを利用して
    // p3の座標を実行例どおりに出力
    // ↓↓↓ここにコードを追加↓↓↓
    p3.printInfo("p3");
    // ↑↑↑ここにコードを追加↑↑↑

    // Point76クラスのprintInfoメソッドを利用して
    // p4の座標を実行例どおりに出力
    // ↓↓↓ここにコードを追加↓↓↓
    p4.printInfo("p4");
    // ↑↑↑ここにコードを追加↑↑↑

    // Point76クラスのprintInfoメソッドを利用して
    // p5の座標を実行例どおりに出力
    // ↓↓↓ここにコードを追加↓↓↓
    p5.printInfo("p5");
    // ↑↑↑ここにコードを追加↑↑↑
  }
}
